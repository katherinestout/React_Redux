{"version":3,"sources":["App.js","store/reducer.js","index.js"],"names":["App","react_default","a","createElement","className","this","props","age","onClick","onAgeUp","onAgeDown","Component","connect","state","dispatch","type","value","initialState","reducer","arguments","length","undefined","action","newState","Object","objectSpread","store","createStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"qPA8BMA,mLAEF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,gBAAQE,KAAKC,MAAMC,MAC7BN,EAAAC,EAAAC,cAAA,UAAQK,QAASH,KAAKC,MAAMG,SAA5B,UACAR,EAAAC,EAAAC,cAAA,UAAQK,QAAWH,KAAKC,MAAMI,WAA9B,oBANWC,aA4BHC,cAbS,SAAAC,GACxB,MAAM,CACJN,IAAKM,EAAMN,MAGc,SAAAO,GACzB,MAAO,CACLL,QAAS,kBAAMK,EAAS,CAACC,KAAM,SAAUC,MAAO,KAChDN,UAAW,kBAAMI,EAAS,CAACC,KAAM,WAAYC,MAAO,OAKzCJ,CAEQZ,WC5DjBiB,EAAe,CACjBV,IAAK,IAgBMW,EAbC,WAAkC,IAAjCL,EAAiCM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BF,EAAeK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxCE,EAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAOX,GASrB,MAPoB,WAAhBS,EAAOP,MACPQ,EAAShB,MAEM,aAAhBe,EAAOP,MACNQ,EAAShB,MAGNgB,UCJLG,EAAQC,YAAYT,GAI1BU,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUJ,MAAOA,GAAOzB,EAAAC,EAAAC,cAAC4B,EAAD,OAAoBC,SAASC,eAAe","file":"static/js/main.8a934ce3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\n\n\n\n  /*state = {\n    age: 21\n  }\n  //takes current state and increases by one\n  onAgeUp = () => {\n//create a copy and mutate/return and set it\nthis.setState({\n  ...this.state,\n  age: ++this.state.age\n})\n  }\n  //takes current state and decreases by one\nonAgeDown = () => {\n  this.setState({\n    ...this.state,\n    age: --this.state.age\n  })\n    }\n\n */\n/*\n<button onClick={this.onAgeUp}>Age UP</button>\n<button onClick = {this.onAgeDown}>Age Down</button>\n*/\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <div>Age: <span> {this.props.age}</span></div>\n       <button onClick={this.props.onAgeUp}>Age UP</button>\n       <button onClick = {this.props.onAgeDown}>Age Down</button>\n      </div>\n    );\n  }\n}\n//if you want to access the store from anywhere you need to map it\n//map props to store and actions\n\n//we need to map state to props so it is available to us\nconst mapStateToProps = state => {\nreturn{\n  age: state.age\n};\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAgeUp: () => dispatch({type: 'AGE_UP', value: 1}),\n    onAgeDown: () => dispatch({type: 'AGE_DOWN', value: 1})\n  };\n};\n\n\nexport default connect(\n  mapStateToProps, \n  mapDispatchToProps) (App);\n","const initialState = {\n    age: 21\n};\n\nconst reducer = (state =initialState , action) => {\n    const newState = {...state};\n\n    if (action.type === 'AGE_UP'){\n        newState.age++;\n    }\n    if(action.type === 'AGE_DOWN'){\n        newState.age--;\n    }\n\n    return newState;\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reducer from './store/reducer';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\n\nconst store = createStore(reducer);\n\n//make the store available to the entire application\n//pass store as a property and wrap the app in provider\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}