{"version":3,"sources":["App.js","store/reducer.js","index.js"],"names":["App","react_default","a","createElement","this","props","age","onClick","onAgeUp","onAgeDown","Component","connect","state","dispatch","type","initialState","reducer","arguments","length","undefined","action","newState","Object","objectSpread","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"0QAIMA,0LA2BF,OACEC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,gBAAQC,KAAKC,MAAMC,MAC7BL,EAAAC,EAAAC,cAAA,UAAQI,QAASH,KAAKC,MAAMG,SAA5B,UACAP,EAAAC,EAAAC,cAAA,UAAQI,QAAWH,KAAKC,MAAMI,WAA9B,oBA/BWC,cAqDHC,cAbS,SAACC,GACzB,MAAM,CACJN,IAAKM,EAAMN,MAGc,SAACO,GAC1B,MAAO,CACLL,QAAS,kBAAMK,EAAS,CAACC,KAAM,YAC/BL,UAAW,kBAAMI,EAAS,CAACC,KAAM,gBAKtBH,CAA8CX,kBCzDvDe,EAAe,CACjBT,IAAK,IAgBMU,EAbC,WAAkC,IAAjCJ,EAAiCK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BF,EAAeK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxCE,EAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAOV,GASrB,MAPoB,WAAhBQ,EAAON,MACPO,EAASf,MAEM,aAAhBc,EAAON,MACNO,EAASf,MAGNe,GCLLG,EAAQC,YAAYT,GAI1BU,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAUJ,MAAOA,GAAOvB,EAAAC,EAAAC,cAAC0B,EAAD,OAAoBC,SAASC,eAAe","file":"static/js/main.741342d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport './App.css';\n\nclass App extends Component {\n  /*state = {\n    age: 21\n  }\n  //takes current state and increases by one\n  onAgeUp = () => {\n//create a copy and mutate/return and set it\nthis.setState({\n  ...this.state,\n  age: ++this.state.age\n})\n  }\n  //takes current state and decreases by one\nonAgeDown = () => {\n  this.setState({\n    ...this.state,\n    age: --this.state.age\n  })\n    }\n\n */\n/*\n<button onClick={this.onAgeUp}>Age UP</button>\n<button onClick = {this.onAgeDown}>Age Down</button>\n*/\n\n  render() {\n    return (\n      <div>\n       <div>Age: <span> {this.props.age}</span></div>\n       <button onClick={this.props.onAgeUp}>Age UP</button>\n       <button onClick = {this.props.onAgeDown}>Age Down</button>\n      </div>\n    );\n  }\n}\n//if you want to access the store from anywhere you need to map it\n//map props to store and actions\n\n//we need to map state to props so it is available to us\nconst mapStateToProps = (state) => {\nreturn{\n  age: state.age\n}\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAgeUp: () => dispatch({type: 'AGE_UP'}),\n    onAgeDown: () => dispatch({type: 'AGE_DOWN'})\n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\n","const initialState = {\n    age: 21\n};\n\nconst reducer = (state =initialState , action) => {\n    const newState = {...state};\n\n    if (action.type === 'AGE_UP'){\n        newState.age++;\n    }\n    if(action.type === 'AGE_DOWN'){\n        newState.age--;\n    }\n\n    return newState;\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\n//make the store available to the entire application\n//pass store as a property and wrap the app in provider\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}